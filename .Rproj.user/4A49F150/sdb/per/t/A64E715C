{
    "collab_server" : "",
    "contents" : "library(codemog)\nlibrary(rgdal)\nlibrary(tigris)\nlibrary(leaflet)\nlibrary(dplyr)\nlibrary(tidyr)\n\n## Read In Shapefile\n\ndsn=paste(getwd(), \"shapefile\", sep=\"/\")\ns=readOGR(dsn=dsn, layer=\"tl_2015_us_state\")\n\n\nmhi=codemog_api(datacall = \"field\", data=\"b19013001\", db=\"acs0913\", sumlev = \"40\",state=\"NA\", meta=\"no\", geography=\"sumlev\", limit=\"3500\")%>%\n  mutate(GEOID=stringr::str_sub(geonum, 2, nchar(as.character(geonum))),\n         medianIncome=as.numeric(b19013001))\n\npop=codemog_api(datacall = \"field\", data=\"b01003001\", db=\"acs0913\", sumlev = \"40\",state=\"NA\", meta=\"no\", geography=\"sumlev\", limit=\"3500\")%>%\n  mutate(GEOID=stringr::str_sub(geonum, 2, nchar(as.character(geonum))),\n         population=as.numeric(b01003001))\n\ndata=inner_join(mhi,pop)\n\nclust=data%>%\n  select(medianIncome, population)%>%\n  scale()\n\nagg=select(data, medianIncome, population)\n\nshinyServer(function(input, output) {\n\n  ## Census Data Download and prepare\n  # clust=reactive(get_data(input$data_field))\n  \n  ## Cluster Analysis data select (only uses numeric variables)\n  \n  # clust=reactive({format_data(data())})\n  \n  ## Can use this to pick true # of clusters\n  \n  wss <- (nrow(clust-1)*sum(apply(clust,2,var)))\n  for (i in 2:15) wss[i] <- sum(kmeans(clust,\n                                       centers=i)$withinss)\n  output$clustPlot=renderPlot({plot(1:15, wss, type=\"b\", xlab=\"Number of Clusters\",\n       ylab=\"Within groups sum of squares\")})\n  \n  # Fit a K-Means Clustering Model using \n  clusters=reactive({input$clusters})\n  fit=reactive({kmeans(clust, clusters())})\n  \n  #check the means of each variable and group\n  output$means=reactive({as.data.frame(aggregate(agg,by=list(fit$cluster,FUN=mean)))})\n  \n  \n  ## join clusters back to main data frame\n  dbf_clust=reactive({data%>%\n    select(GEOID, medianIncome, population)%>%\n    bind_cols(data.frame(cluster=fit()$cluster))})\n  \n  ## join clusters to spatial data\n  \n  shape=reactive({geo_join(s, dbf_clust(), \"GEOID\", \"GEOID\")})\n  \n  ## set palette\n  \n  # pal=reactive({colorFactor(\"Set1\", as.factor(shape()$cluster))})\n  \n  \n  ## make popup\n  \n  popup=reactive({paste0(\"<strong>Median Income:</strong>\", \n               shape()$medianIncome, \n               \"<strong>ACS Population:</strong>\", \n               shape()$population,\n               \"<br><strong>Cluster: </strong>\", \n               shape()$cluster)})\n\noutput$kmeans_map=renderLeaflet({\n  pal=colorFactor(\"Set1\", as.factor(shape()$cluster))\n  leaflet(shape()) %>%\n  clearBounds()%>%\n  addProviderTiles(\"CartoDB.Positron\") %>%\n  addPolygons(fillColor = ~pal(cluster), \n              fillOpacity = 0.8, \n              color = \"#BDBDC3\", \n              weight = 1, \n              popup = popup)%>%\n  addLegend(\"bottomright\", pal = pal, values = ~cluster,\n            title = \"K-means Cluster\")})\n  })\n\n",
    "created" : 1447542469995.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2013611754",
    "id" : "A64E715C",
    "lastKnownWriteTime" : 1448811590,
    "path" : "~/Desktop/Personal R/KMeans_Leaflet/leaflet_kmeans_demo/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}